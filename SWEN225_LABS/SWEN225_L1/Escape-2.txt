class Room 
{
    * -> * GameFixture fixtures;
  
  public String getRoomDescription(){
  String print = "I/m in a room. I see:\n";
    for (GameFixture fix : fixtures){
     print = print + fix.getFixtureDescription() + "\n" ;
    }
    return print;
  }
  
public void playScenario(){
  TreasureChest chest = new TreasureChest("A large and heavy treasure chest");
  addFixture(chest);
  System.out.println(getRoomDescription());
  chest.setOpen(true);
  System.out.println(getRoomDescription());
}
  
  public static void main(String... args) {
  new Room().playScenario();
}
  
}

class GameFixture
{
  fixtureDescription;
  }

class TreasureChest
{
  isA GameFixture;
  Boolean open = false;

  public String getFixtureDescription() {
    if (getOpen() == true){
      return "A large and heavy treasure chest. It contains the room key!";
    }
    else{
    return  "A large and heavy treasure chest. It's lid is closed.";
    }
    
  }
}

//$?[End_of_model]$?

namespace -;


class Room
{
  position 64 78 237.875 78.3594;
  position.association GameFixture:fixtures__Room 175,112 0,10;
}

class GameFixture
{
  position 297 191 109 74.3594;
  position.association GameFixture__Room 0,17 110,11;
}

class TreasureChest
{
  position 124 262 119.938 41.3594;
}